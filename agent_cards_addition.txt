This is what needs to be added to the AgentProfilesManager component (around line 3697):

Add this BEFORE the closing </div> tag of the component:

      {/* Individual Agent Cards */}
      {agents.length > 0 ? (
        <div className="space-y-3">
          <div className="border-t border-gray-200 pt-4">
            <h4 className="text-sm font-semibold text-gray-700 mb-3">Current Agents</h4>
          </div>
          {agents.map((agent) => (
            <div key={agent.id} className="bg-gray-50 rounded-lg p-4 border border-gray-200 relative">
              {/* Agent Header */}
              <div className="flex items-start space-x-3">
                {/* Avatar */}
                <div className="flex-shrink-0">
                  {agent.avatar_url ? (
                    <img 
                      src={agent.avatar_url} 
                      alt={agent.name}
                      className="w-12 h-12 rounded-full object-cover border-2 border-gray-300"
                      loading="lazy"
                    />
                  ) : (
                    <div className="w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white font-bold text-lg border-2 border-gray-300">
                      {agent.name.charAt(0).toUpperCase()}
                    </div>
                  )}
                </div>
                
                {/* Agent Info */}
                <div className="flex-1 min-w-0">
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <h3 className="font-bold text-gray-800 text-lg leading-tight">{agent.name}</h3>
                      <p className="text-sm text-gray-600 mb-2">{AGENT_ARCHETYPES[agent.archetype]?.name || agent.archetype}</p>
                      <p className="text-sm text-gray-700 italic leading-relaxed mb-2">"{agent.goal}"</p>
                      {agent.expertise && (
                        <p className="text-xs text-gray-600 mb-2">
                          <strong>Expertise:</strong> {agent.expertise}
                        </p>
                      )}
                      {agent.background && (
                        <p className="text-xs text-gray-600 line-clamp-2">
                          <strong>Background:</strong> {agent.background}
                        </p>
                      )}
                    </div>
                    
                    {/* Action Buttons */}
                    <div className="flex items-center space-x-2 ml-4">
                      <button
                        onClick={() => onDeleteAgent(agent.id, agent.name)}
                        className="p-2 text-red-600 hover:bg-red-50 rounded-full transition-colors"
                        title="Delete Agent"
                      >
                        <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                        </svg>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      ) : (
        <div className="text-center py-8 text-gray-500">
          <div className="text-4xl mb-4">ðŸ‘¥</div>
          <p className="text-lg font-medium mb-2">No agents yet</p>
          <p className="text-sm">Add agents to start your simulation</p>
        </div>
      )}

      {/* Delete All Confirmation Dialog */}
      {showDeleteConfirm && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-lg p-6 w-full max-w-md">
            <h3 className="text-lg font-bold mb-4 text-gray-800">Confirm Delete All</h3>
            <p className="text-gray-600 mb-6">
              Are you sure you want to delete ALL {agents.length} agents? This action cannot be undone and will remove all agents from conversations.
            </p>
            <div className="flex space-x-3">
              <button
                onClick={() => setShowDeleteConfirm(false)}
                className="flex-1 bg-gray-100 text-gray-700 px-4 py-2 rounded hover:bg-gray-200 transition-colors"
              >
                No, Cancel
              </button>
              <button
                onClick={confirmDeleteAll}
                className="flex-1 bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition-colors"
              >
                Yes, Delete All
              </button>
            </div>
          </div>
        </div>
      )}